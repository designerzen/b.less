/////////////////////////////////////////////////////////////////////////////////////////////////
//
// COMMON UTILITIES =============================================================================
//
/////////////////////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////////////////
//
// Clearfix
//
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
//
///////////////////////////////////////////////////////////////////////////////////////////
.clearfix() {
	*zoom:1;
	&:before,
	&:after {
		content: " "; // 1
		display: table; // 2
	}
	&:after {
		clear: both;
	}
}

// Hide from the screen render but keep accessibile.
// You should use this for descriptive instructions that you do not want to present
.visuallyhidden() {
    border: 0;
	clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

// Extends the .visuallyhidden class to allow the element
// to be focusable when navigated to via the keyboard:
// https://www.drupal.org/node/897638
.visuallyhidden-focusable()
{
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;

	&:active, &:focus
	{
		clip: auto;
		width: auto;
	    height: auto;
	    margin: 0;
	    overflow: visible;
	    position: static;
	}
}

// If you want something hidden at one size but visable in abother
.undo-visuallyhidden(){
	//border
	clip:auto;
	height:auto;
	width: auto;
	margin:inherit;
	overflow: visible;
	padding: inherit;
	position: static;

	// &:active, &:focus
	// {
	//     margin: 0;
	//     overflow: visible;
	//     position: static;
	// }
}

// Image replacement.
.ir () {
	border: 0;
	overflow: hidden;
	background-color: transparent;
	*text-indent: -9999px;
	&:before {
		content: "";
		display: block;
		width: 0;
		height: 100%;
	}
}

// Make any button, link or element refuse to accept mouse events
// CAUTION : Use sparingly as you may run into debugging issues!
.unusable(){
	pointer-events : none;
}

// Prevent user interaction
.disabled() {
    border: 0;
    cursor: not-allowed;
}
